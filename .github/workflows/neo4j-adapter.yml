name: Synchronize Presentations to Neo4j

on: workflow_dispatch

jobs:
  all-presentations:
    runs-on: ubuntu-latest
    name: Synchronize Presentations
    outputs:
      json: ${{ steps.issue-credential.outputs.json }}
    steps:
      - name: Get Access Token
        uses: transmute-industries/verifiable-data-platform-github-action@v0.1.1
        id: tokenCreate
        with:
          operation-id: tokenCreate
          api-base-url: ${{ secrets.API_BASE_URL }}
          did: ${{ secrets.ORGANIZATION_DID_WEB }}
          token-endpoint: ${{ secrets.TOKEN_ENDPOINT }}
          token-audience: ${{ secrets.TOKEN_AUDIENCE }}
          client-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
      - name: Gets Received Presentations
        uses: transmute-industries/verifiable-data-platform-github-action@v0.1.1
        id: getPresentationsSharedWithMe
        with:
          operation-id: getPresentationsSharedWithMe
      - name: set received to env
        run: echo "received_presentations=$(echo $verifiable_data_platform_api_response | jq -c '.items' | jq -c 'map(.verifiablePresentation)' | jq -c .[0:9])" >> $GITHUB_ENV
      - name: Merge Received Query from Document
        uses: transmute-industries/transmute@v0.8.6
        with:
          neo4j-uri: ${{ secrets.NEO4J_URI }}
          neo4j-user: ${{ secrets.NEO4J_USERNAME }}
          neo4j-password: ${{ secrets.NEO4J_PASSWORD }}
          json: ${{ env.received_presentations }}

      - name: Gets Sent Presentations
        uses: transmute-industries/verifiable-data-platform-github-action@v0.1.1
        id: getPresentationsSharedWithOthers
        with:
          operation-id: getPresentationsSharedWithOthers
      - name: set received to env
        run: echo "sent_presentations=$(echo $verifiable_data_platform_api_response | jq -c '.items' | jq -c 'map(.verifiablePresentation)' | jq -c .[0:9])" >> $GITHUB_ENV
      - name: Merge Sent Query from Document
        uses: transmute-industries/transmute@v0.8.6
        with:
          neo4j-uri: ${{ secrets.NEO4J_URI }}
          neo4j-user: ${{ secrets.NEO4J_USERNAME }}
          neo4j-password: ${{ secrets.NEO4J_PASSWORD }}
          json: ${{ env.sent_presentations }}
